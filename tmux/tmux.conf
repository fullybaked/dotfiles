# Change the tmux prefix key
unbind C-b
set -g prefix 'C-\'
bind-key 'C-\' send-prefix

# prefix r will reload the conf file in the current session
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# use 256 term for pretty colors
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# use emacs style key bindings (readline) in the tmux command prompt
set-option -g status-keys "emacs"

# increase scroll-back history
set -g history-limit 5000

# start window index at 1
set -g base-index 1

# renumber windows when closing one
set -g renumber-windows on

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# better window splitting keys (\ is for | without a shift key)
bind - split-window -v -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-Space if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# easy pane resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# open new windows with current panes path
bind c new-window -c '#{pane_current_path}'

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-right-length 100
set -g status-right "#(date '+%a%e %b - %R')"
set-option -g status-position bottom

# color status bar
set -g status-bg '#222222'
set -g status-fg '#999999'

# highlight current window
set-window-option -g window-status-current-style fg='#000000',bg='#cccccc'

# set color of active pane
set -g pane-border-style bg='#000000'
set -g pane-active-border-style fg=green,bg='#000000'

# get tmux to play nice with system clipboard (&vim)
set-option -g default-command "reattach-to-user-namespace -l zsh"

#Â break current pane to a new window, but stay on current window
bind-key b break-pane -d
#
# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# quick choose tree for jumping to other sessions
# bind-key C-j choose-tree
# Fuzzy matching session navigation via fzf utility (brew install fzf)
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# "break session" and "kill session" without exiting tmux
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

set-option -sg escape-time 10
